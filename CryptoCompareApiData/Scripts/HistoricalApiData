from azure.cosmosdb.table.tableservice import TableService
from azure.cosmosdb.table.models import Entity, EntityProperty, EdmType
# import httplib3
import json
# import urllib3
import datetime
import requests
import importlib

dayDates = []
#timestamps = []
openz = []
close = []
high = []
low = []

def historicalDataGetter():
    theApiUrl = ""
    theApiResponse = requests.get(theApiUrl)
    
    if theApiResponse.status_code == 200:
        theResponse = json.loads(theApiResponse.content)

        for someData in theResponse["Data"]["Data"]:
            thedate = datetime.datetime(1, 1, 1) + datetime.timedelta(seconds=someData["time"])
            thedate = thedate.replace(year=thedate.year + 1969)
            dayDates.append(thedate)
            openz.append(float(someData["open"]))
            close.append(float(someData["close"]))
            high.append(float(someData["high"]))
            low.append(float(someData["low"]))
        else:
            print("Did not work, error: ", theApiResponse.status_code)
        return

def azureTable(dayDates, openz, close, high, low):
    # table_service = TableService(account_name='', account_key='')
    table_service = TableService(
        connection_string='')

    table_service.create_table('bitcoinData')
    bitcoin = {'PartitionKey': dayDates, 'RowKey': EntityProperty(EdmType.DOUBLE, openz),
               'Close': EntityProperty(EdmType.DOUBLE, close), 'High': EntityProperty(EdmType.DOUBLE, high),
               'Low': EntityProperty(EdmType.DOUBLE, low), 'priority': 200}
    table_service.insert_entity('bitcoinData', bitcoin)
    

#historicalDataGetter()
#azureTable(dayDates, openz, close, high, low)
